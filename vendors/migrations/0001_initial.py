# Generated by Django 4.2.4 on 2023-09-28 05:59
# Generated by Django 4.2.4 on 2023-09-26 15:35

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shortuuid.django_fields
import vendors.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< Updated upstream
        ('auth', '0012_alter_user_first_name_max_length'),
        ('product', '0002_alter_category_category_choice'),
=======
        ('product', '0001_initial'),
>>>>>>> Stashed changes
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, default='Cool', max_length=20)),
                ('address', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Address',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('vend_id', shortuuid.django_fields.ShortUUIDField(alphabet='0123456789abcdefABCDEF', length=10, max_length=20, prefix='vend-', unique=True)),
                ('vendor_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=20)),
                ('image', models.ImageField(upload_to=vendors.models.user_directory_path)),
                ('description', models.TextField(blank=True, null=True)),
                ('rating', models.CharField(blank=True, default='Cool', max_length=100)),
                ('warranty_period', models.PositiveIntegerField(default=0)),
                ('response_time', models.CharField(blank=True, default='Cool', max_length=100)),
                ('shipping_time', models.CharField(blank=True, default='Cool', max_length=100)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='vendors.address')),
                ('groups', models.ManyToManyField(blank=True, related_name='seller_set', to='auth.group', verbose_name='groups')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='seller_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Vendors',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
